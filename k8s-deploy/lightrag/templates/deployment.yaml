apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightrag.fullname" . }}
  labels:
    {{- include "lightrag.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lightrag.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lightrag.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9621
              protocol: TCP
          env:
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "9621"
            - name: WORKING_DIR
              value: "/app/data/rag_storage"
            - name: INPUT_DIR
              value: "/app/data/inputs"
            {{- if .Values.config.llmBinding }}
            - name: LLM_BINDING
              value: {{ .Values.config.llmBinding | quote }}
            {{- end }}
            {{- if .Values.config.llmModel }}
            - name: LLM_MODEL
              value: {{ .Values.config.llmModel | quote }}
            {{- end }}
            {{- if .Values.config.embeddingBinding }}
            - name: EMBEDDING_BINDING
              value: {{ .Values.config.embeddingBinding | quote }}
            {{- end }}
            {{- if .Values.config.embeddingModel }}
            - name: EMBEDDING_MODEL
              value: {{ .Values.config.embeddingModel | quote }}
            {{- end }}
            {{- if .Values.config.kvStorage }}
            - name: KV_STORAGE
              value: {{ .Values.config.kvStorage | quote }}
            {{- end }}
            {{- if .Values.config.vectorStorage }}
            - name: VECTOR_STORAGE
              value: {{ .Values.config.vectorStorage | quote }}
            {{- end }}
            {{- if .Values.config.graphStorage }}
            - name: GRAPH_STORAGE
              value: {{ .Values.config.graphStorage | quote }}
            {{- end }}
            {{- if .Values.config.docStatusStorage }}
            - name: DOC_STATUS_STORAGE
              value: {{ .Values.config.docStatusStorage | quote }}
            {{- end }}
            {{- if .Values.config.apiKey }}
            - name: LIGHTRAG_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "lightrag.fullname" . }}
                  key: api-key
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
            {{- if .Values.config.inputFiles }}
            - name: input-files
              mountPath: /app/data/inputs
            {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "lightrag.fullname" . }}
        {{- if .Values.config.inputFiles }}
        - name: input-files
          configMap:
            name: {{ include "lightrag.fullname" . }}-input-files
        {{- end }}
